#John Veillette

import argparse
import sys
import csv
import tree
import treemap
import pandas as pd 

CS4ALL_SCHOOLS_FILE = 'cs4all-schools.csv'

def draw(filename, output_filename = None):
	'''
	Draws a treemap student flow represented in the specified .csv filename.

	Inputs:
		filename: a .csv file as generated by student-transfer-reports.py 
		output_filename: a .png filename to store the image of the treemap;
						(will cause error if non .png filename is specified)
	'''
	t = load_from_file(filename)
	treemap.draw_treemap(t, output_filename = output_filename)

def load_from_file(filename):
	'''
	Input: a .csv file

	Returns: a TreeNode object

	'''
	cs4all_schools = pd.read_csv(CS4ALL_SCHOOLS_FILE)
	cs4all_school_ids = cs4all_schools['school_id'].tolist()
	cs4all = tree.TreeNode('1', 'cs4all Schools', 0)
	other = tree.TreeNode('0', 'Other Schools', 0)
	cs4all_child = cs4all.get_children_as_dict()
	other_child = other.get_children_as_dict()
	with open(filename) as f:
		reader = csv.reader(f, skipinitialspace=True)
		header = next(reader)
		for row in reader:
			school = dict(zip(header, row))
			if school['School Code'] in [str(int(x)) for x in cs4all_school_ids]:
				name = school['School Name']
				count = school['Count']
				weight = cs4all.weight + int(count)
				cs4all.weight = weight
				label = "%s (%s)" % (name, int(count))
				cs4all_child[name] = tree.TreeNode('1', label, int(count))
			else:
				name = school['School Name']
				count = school['Count']
				weight = other.weight + int(count)
				other.weight = weight
				label = "%s (%s)" % (name, int(count))
				other_child[name] = tree.TreeNode('0', label, int(count))
	t = tree.TreeNode('', '', cs4all.weight + other.weight)
	children = t.get_children_as_dict()
	children['cs4all'] = cs4all
	children['other'] = other
	return t







